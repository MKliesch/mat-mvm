function space2_rsa_pca_tla_classif_cluster(procDir,replaceDataroot,replaceDatatype,gradeCorrect,accurateClassifSelect,date_string,dataTypes,cfg_sel,subjects,sesNames,thisROI,latencies,sim_method,eig_criterion,lpfilt,subselect_eeg)

% space RSA

% this file gets run by space2_rsa_pca_tla_classif_wrapper.m

%% load the analysis details

% make sure these are cell arrays
if ~iscell(subjects)
  subjects = {subjects};
end
if ~iscell(sesNames)
  sesNames = {sesNames};
end

[exper,ana,dirs,files] = mm_loadAD(procDir,subjects,sesNames,replaceDataroot,replaceDatatype);

%% set up channel groups

% pre-defined in this function
ana = mm_ft_elecGroups(ana);

%% set up similarity analysis

if accurateClassifSelect
  dataTypes_train = {'Face', 'House'};
  equateTrainTrials = true;
  standardizeTrain = true;
  alpha = 0.2;
  
  % do both P1 and P2 need to be classified correctly to use this trial?
  classifRequireP1 = true;
  classifRequireP2 = true;
  
  classif_str = 'classif';
else
  classif_str = 'noClassif';
end

parameter = 'trial';

% column numbers in trialinfo
% trialNumCol = 5;
phaseCountCol = 4;
stimNumCol = 6;
categNumCol = 7;
% pairNumCol = 13;

if iscell(thisROI)
  roi_str = sprintf(repmat('%s',1,length(thisROI)),thisROI{:});
elseif ischar(thisROI)
  roi_str = thisROI;
end

cfg_sel.channel = unique(cat(2,ana.elecGroups{ismember(ana.elecGroupsStr,thisROI)}));

%% classif: train on expo images, test on multistudy images; no classif: just calculate similarity

sesNum = 1;

% ana.trl_order.multistudy_image = {'eventNumber', 'sesType', 'phaseType', 'phaseCount', 'trial', 'stimNum', 'catNum', 'targ', 'spaced', 'lag', 'presNum', 'pairOrd', 'pairNum', 'cr_recog_acc', 'cr_recall_resp', 'cr_recall_spellCorr'};

if accurateClassifSelect
  error('Not ready for classifier because there is no expo phase to train on!');
%   % classifier needs expo and multistudy; can include targ==-1 because
%   % those are simply buffers for multistudy
%   if all(ismember({'img_RgH_rc_spac', 'img_RgH_rc_mass', 'img_RgH_fo_spac', 'img_RgH_fo_mass', 'word_RgH_rc_spac', 'word_RgH_rc_mass', 'word_RgH_fo_spac', 'word_RgH_fo_mass'},dataTypes))
%     data_str = 'img_word';
%     ana.eventValues = {{'expo_stim','multistudy_image','multistudy_word'}};
%     ana.eventValuesSplit = { ...
%       {{'Face','House'} ...
%       { ...
%       %'img_onePres' ...
%       'img_RgH_rc_spac_p1' ,'img_RgH_rc_spac_p2' ,'img_RgH_rc_mass_p1' ,'img_RgH_rc_mass_p2' ...
%       'img_RgH_fo_spac_p1' ,'img_RgH_fo_spac_p2' ,'img_RgH_fo_mass_p1' ,'img_RgH_fo_mass_p2' ...
%       %'img_RgM_spac_p1','img_RgM_spac_p2','img_RgM_mass_p1','img_RgM_mass_p2' ...
%       } ...
%       { ...
%       %'word_onePres' ...
%       'word_RgH_rc_spac_p1','word_RgH_rc_spac_p2','word_RgH_rc_mass_p1','word_RgH_rc_mass_p2' ...
%       'word_RgH_fo_spac_p1','word_RgH_fo_spac_p2','word_RgH_fo_mass_p1','word_RgH_fo_mass_p2' ...
%       %'word_RgM_spac_p1','word_RgM_spac_p2','word_RgM_mass_p1','word_RgM_mass_p2' ...
%       } ...
%       } ...
%       };
%     
%     if allowRecallSynonyms
%       ana.trl_expr = { ...
%         { ...
%         { ...
%         sprintf('eventNumber == %d & i_catNum == 1 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         sprintf('eventNumber == %d & i_catNum == 2 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0  & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         } ...
%         } ...
%         };
%     else
%       ana.trl_expr = { ...
%         { ...
%         { ...
%         sprintf('eventNumber == %d & i_catNum == 1 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         sprintf('eventNumber == %d & i_catNum == 2 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0  & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         } ...
%         } ...
%         };
%     end
%   elseif all(ismember({'img_RgH_rc_spac', 'img_RgH_rc_mass','img_RgH_fo_spac', 'img_RgH_fo_mass'},dataTypes))
%     data_str = 'img';
%     ana.eventValues = {{'expo_stim','multistudy_image'}};
%     ana.eventValuesSplit = { ...
%       { ...
%       {'Face','House'} ...
%       { ...
%       %'img_onePres' ...
%       'img_RgH_rc_spac_p1','img_RgH_rc_spac_p2','img_RgH_rc_mass_p1','img_RgH_rc_mass_p2' ...
%       'img_RgH_fo_spac_p1','img_RgH_fo_spac_p2','img_RgH_fo_mass_p1','img_RgH_fo_mass_p2' ...
%       %'img_RgM_spac_p1','img_RgM_spac_p2','img_RgM_mass_p1','img_RgM_mass_p2' ...
%       } ...
%       } ...
%       };
%     
%     if allowRecallSynonyms
%       ana.trl_expr = { ...
%         { ...
%         { ...
%         sprintf('eventNumber == %d & i_catNum == 1 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         sprintf('eventNumber == %d & i_catNum == 2 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         } ...
%         } ...
%         };
%     else
%       ana.trl_expr = { ...
%         { ...
%         { ...
%         sprintf('eventNumber == %d & i_catNum == 1 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         sprintf('eventNumber == %d & i_catNum == 2 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image'))) ...
%         } ...
%         } ...
%         };
%     end
%   elseif all(ismember({'word_RgH_rc_spac', 'word_RgH_rc_mass','word_RgH_fo_spac', 'word_RgH_fo_mass'},dataTypes))
%     data_str = 'word';
%     ana.eventValues = {{'expo_stim','multistudy_word'}};
%     ana.eventValuesSplit = { ...
%       {{'Face','House'} ...
%       { ...
%       %'word_onePres' ...
%       'word_RgH_rc_spac_p1','word_RgH_rc_spac_p2','word_RgH_rc_mass_p1','word_RgH_rc_mass_p2' ...
%       'word_RgH_fo_spac_p1','word_RgH_fo_spac_p2','word_RgH_fo_mass_p1','word_RgH_fo_mass_p2' ...
%       %'word_RgM_spac_p1','word_RgM_spac_p2','word_RgM_mass_p1','word_RgM_mass_p2' ...
%       } ...
%       } ...
%       };
%     
%     if allowRecallSynonyms
%       ana.trl_expr = { ...
%         { ...
%         { ...
%         sprintf('eventNumber == %d & i_catNum == 1 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         sprintf('eventNumber == %d & i_catNum == 2 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr > 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 0 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0  & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         } ...
%         } ...
%         };
%     else
%       ana.trl_expr = { ...
%         { ...
%         { ...
%         sprintf('eventNumber == %d & i_catNum == 1 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         sprintf('eventNumber == %d & i_catNum == 2 & expo_response ~= 0 & rt < 3000',find(ismember(exper.eventValues{sesNum},'expo_stim'))) ...
%         } ...
%         { ...
%         %sprintf('eventNumber == %d & targ == 1 & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr == 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 1 & cr_recall_spellCorr < 1 & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 1 & lag > 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0 & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         %sprintf('eventNumber == %d & targ == 1 & cr_recog_acc == 0  & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word'))) ...
%         } ...
%         } ...
%         };
%     end
%   end
else
if all(ismember({'img_rc_mass','img_fo_mass', 'img_rc_spac2','img_fo_spac2', 'img_rc_spac12','img_fo_spac12', 'img_rc_spac32','img_fo_spac32', 'word_rc_mass','word_fo_mass', 'word_rc_spac2','word_fo_spac2', 'word_rc_spac12','word_fo_spac12', 'word_rc_spac32','word_fo_spac32'},dataTypes))
  data_str = 'img_word';
  ana.eventValues = {{'multistudy_image','multistudy_word'}};
  ana.eventValuesSplit = { ...
    { ...
    { ...
    %'img_rc_onePres','img_fo_onePres' ...
    'img_rc_mass_p1','img_rc_mass_p2','img_fo_mass_p1','img_fo_mass_p2' ...
    'img_rc_spac2_p1','img_rc_spac2_p2','img_fo_spac2_p1','img_fo_spac2_p2' ...
    'img_rc_spac12_p1','img_rc_spac12_p2','img_fo_spac12_p1','img_fo_spac12_p2' ...
    'img_rc_spac32_p1','img_rc_spac32_p2','img_fo_spac32_p1','img_fo_spac32_p2' ...
    } ...
    { ...
    %'word_rc_onePres','word_fo_onePres' ...
    'word_rc_mass_p1','word_rc_mass_p2','word_fo_mass_p1','word_fo_mass_p2' ...
    'word_rc_spac2_p1','word_rc_spac2_p2','word_fo_spac2_p1','word_fo_spac2_p2' ...
    'word_rc_spac12_p1','word_rc_spac12_p2','word_fo_spac12_p1','word_fo_spac12_p2' ...
    'word_rc_spac32_p1','word_rc_spac32_p2','word_fo_spac32_p1','word_fo_spac32_p2' ...
    } ...
    } ...
    };
  
  ana.trl_expr = { ...
    { ...
    { ...
    %sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    %sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    } ...
    { ...
    %sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    %sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    } ...
    } ...
    };
elseif all(ismember({'img_rc_mass','img_fo_mass', 'img_rc_spac2','img_fo_spac2', 'img_rc_spac12','img_fo_spac12', 'img_rc_spac32','img_fo_spac32'},dataTypes))
  data_str = 'img';
  ana.eventValues = {{'multistudy_image'}};
  ana.eventValuesSplit = { ...
    { ...
    { ...
    %'img_rc_onePres','img_fo_onePres' ...
    'img_rc_mass_p1','img_rc_mass_p2','img_fo_mass_p1','img_fo_mass_p2' ...
    'img_rc_spac2_p1','img_rc_spac2_p2','img_fo_spac2_p1','img_fo_spac2_p2' ...
    'img_rc_spac12_p1','img_rc_spac12_p2','img_fo_spac12_p1','img_fo_spac12_p2' ...
    'img_rc_spac32_p1','img_rc_spac32_p2','img_fo_spac32_p1','img_fo_spac32_p2' ...
    } ...
    } ...
    };
  
  ana.trl_expr = { ...
    { ...
    { ...
    %sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    %sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_image')),gradeCorrect) ...
    } ...
    } ...
    };
elseif all(ismember({'word_rc_mass','word_fo_mass', 'word_rc_spac2','word_fo_spac2', 'word_rc_spac12','word_fo_spac12', 'word_rc_spac32','word_fo_spac32'},dataTypes))
  data_str = 'word';
  ana.eventValues = {{'multistudy_word'}};
  ana.eventValuesSplit = { ...
    { ...
    { ...
    %'word_rc_onePres','word_fo_onePres' ...
    'word_rc_mass_p1','word_rc_mass_p2','word_fo_mass_p1','word_fo_mass_p2' ...
    'word_rc_spac2_p1','word_rc_spac2_p2','word_fo_spac2_p1','word_fo_spac2_p2' ...
    'word_rc_spac12_p1','word_rc_spac12_p2','word_fo_spac12_p1','word_fo_spac12_p2' ...
    'word_rc_spac32_p1','word_rc_spac32_p2','word_fo_spac32_p1','word_fo_spac32_p2' ...
    } ...
    } ...
    };
  
  ana.trl_expr = { ...
    { ...
    { ...
    %sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    %sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == -1 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 0 & lag == 0 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 2 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 12 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 &  ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 1',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    sprintf('eventNumber == %d & targ == 1 & ~ismember(cr_recall_spellCorr,%s) & spaced == 1 & lag == 32 & presNum == 2',find(ismember(exper.eventValues{sesNum},'multistudy_word')),gradeCorrect) ...
    } ...
    } ...
    };
else
  error('Did not find correct event setup!');
end
end

%% load in the subject data

% % make sure ana.eventValues is set properly
% if ~iscell(ana.eventValues{1})
%   ana.eventValues = {ana.eventValues};
% end
% if ~isfield(ana,'eventValues') || isempty(ana.eventValues{1})
%   ana.eventValues = {exper.eventValues};
% end

keeptrials = true;
% [data_tla,exper] = mm_ft_loadSubjectData(exper,dirs,ana,'tla',keeptrials,'trialinfo');
[data_tla,exper] = mm_loadSubjectData(exper,dirs,ana,'tla',keeptrials,'trialinfo');

% %% get rid of the bad channels
% 
% cfg = [];
% cfg.printRoi = {{'LAS'},{'RAS'},{'LPS'},{'RPS'}};
% [data_tla] = mm_rmBadChan(cfg,exper,ana,data_tla);

% overwrite ana.eventValues with the new split events
ana.eventValues = ana.eventValuesSplit;

%% decide who to kick out based on trial counts

% Subjects with bad behavior
% exper.badBehSub = {{}};
exper.badBehSub = {{'SPACE2007', 'SPACE2025'}};

% exclude subjects with low event counts
[exper,ana] = mm_threshSubs_multiSes(exper,ana,5,[],'vert');

%% lowpass filter and smaller segments

if lpfilt
  sampleRate = exper.sampleRate;
  lpfreq = 40;
  lofiltord = 3;
  lpfilttype = 'but';
  lpfilt_str = sprintf('lpfilt%d',lpfreq);
else
  lpfilt_str = 'lpfiltNo';
end

if subselect_eeg
  cfg_sseeg = [];
  cfg_sseeg.latency = [min(latencies(:)) max(latencies(:))];
end

if lpfilt || subselect_eeg
  for ses = 1:length(exper.sesStr)
    for typ = 1:length(ana.eventValues{ses})
      for evVal = 1:length(ana.eventValues{ses}{typ})
        for sub = 1:length(exper.subjects)
          fprintf('%s, %s, %s\n',exper.subjects{sub},exper.sesStr{ses},ana.eventValues{ses}{typ}{evVal});
          
          if lpfilt
            % do the lowpass filter
            for i = 1:size(data_tla.(exper.sesStr{ses}).(ana.eventValues{ses}{typ}{evVal}).sub(sub).data.(parameter),1)
              data_tla.(exper.sesStr{ses}).(ana.eventValues{ses}{typ}{evVal}).sub(sub).data.(parameter)(i,:,:) = ft_preproc_lowpassfilter( ...
                squeeze(data_tla.(exper.sesStr{ses}).(ana.eventValues{ses}{typ}{evVal}).sub(sub).data.(parameter)(i,:,:)), ...
                sampleRate,lpfreq,lofiltord,lpfilttype);
            end
          end
          
          if subselect_eeg
            % select a more limited time range
            data_tla.(exper.sesStr{ses}).(ana.eventValues{ses}{typ}{evVal}).sub(sub).data = ft_selectdata(cfg_sseeg,data_tla.(exper.sesStr{ses}).(ana.eventValues{ses}{typ}{evVal}).sub(sub).data);
          end
        end
      end
    end
  end
end

%% initialize to store results

similarity_all = cell(length(exper.subjects),length(exper.sesStr),length(dataTypes),size(latencies,1));
similarity_ntrials = nan(length(exper.subjects),length(exper.sesStr),length(dataTypes),size(latencies,1));

%% run similarity comparison

for sub = 1:length(exper.subjects)
  
  for ses = 1:length(exper.sesStr)
    sesStr = exper.sesStr{ses};
    
    if ~exper.badSub(sub,ses)
      fprintf('\t%s %s...\n',exper.subjects{sub},exper.sesStr{ses});
      
      if accurateClassifSelect
        % equate the training categories
        trlIndTrain = cell(length(dataTypes_train),1);
        if equateTrainTrials
          nTrainTrial = nan(length(dataTypes_train),1);
          for dt = 1:length(dataTypes_train)
            nTrainTrial(dt) = size(data_tla.(sesStr).(dataTypes_train{dt}).sub(sub).data.(parameter),1);
          end
          fprintf('\tEquating training categories to have %d trials.\n',min(nTrainTrial));
          for dt = 1:length(dataTypes_train)
            trlInd = randperm(nTrainTrial(dt));
            trlIndTrain{dt,1} = sort(trlInd(1:min(nTrainTrial)));
          end
        else
          fprintf('\tNot equating training category trial counts.\n');
          for dt = 1:length(dataTypes_train)
            trlIndTrain{dt,1} = 'all';
          end
        end
      end
      
      % train for a given latency and set of electrodes
      for lat = 1:size(latencies,1)
        cfg_sel.latency = latencies(lat,:);
        
        if accurateClassifSelect
          % select the training data
          data_train = struct;
          
          % select the data
          for dt = 1:length(dataTypes_train)
            cfg_sel.trials = trlIndTrain{dt};
            data_train.(dataTypes_train{dt}) = ft_selectdata_new(cfg_sel,data_tla.(exper.sesStr{ses}).(dataTypes_train{dt}).sub(sub).data);
          end
          
          % get the category number for each training image
          imageCategory_train = data_train.(dataTypes_train{1}).trialinfo(:,categNumCol);
          for dt = 2:length(dataTypes_train)
            imageCategory_train = cat(1,imageCategory_train,data_train.(dataTypes_train{dt}).trialinfo(:,categNumCol));
          end
          
          % concatenate the data
          dat_train = data_train.(dataTypes_train{1}).(parameter);
          for dt = 2:length(dataTypes_train)
            dat_train = cat(1,dat_train,data_train.(dataTypes_train{dt}).(parameter));
          end
          
          dim = size(dat_train);
          dat_train = reshape(dat_train, dim(1), prod(dim(2:end)));
          
          if standardizeTrain
            fprintf('\t\tStandardizing the training data...');
            
            m = dml.standardizer;
            m = m.train(dat_train);
            dat_train = m.test(dat_train);
            fprintf('Done.\n');
          end
          
          fprintf('\t\tTraining classifier...');
          %facehouse = {dml.standardizer dml.enet('family','binomial','alpha',alpha)};
          facehouse = dml.enet('family','binomial','alpha',alpha);
          facehouse = facehouse.train(dat_train,imageCategory_train);
          %facehouse_svm = dml.svm;
          %facehouse_svm = facehouse_svm.train(dat_train,imageCategory_train);
          fprintf('Done.\n');
        end
        
        data_p1_append_str = [];
        data_p2_append_str = [];
        dTypes_p1 = [];
        dTypes_p2 = [];
        
        for d = 1:length(dataTypes)
          data_p1_append_str = cat(2,data_p1_append_str,sprintf(',data_tla.%s.%s_p1.sub(%d).data',sesStr,dataTypes{d},sub));
          data_p2_append_str = cat(2,data_p2_append_str,sprintf(',data_tla.%s.%s_p2.sub(%d).data',sesStr,dataTypes{d},sub));
          
          dTypes_p1 = cat(2,dTypes_p1,d*ones(1,size(data_tla.(sesStr).(sprintf('%s_p1',dataTypes{d})).sub(sub).data.(parameter),1)));
          dTypes_p2 = cat(2,dTypes_p2,d*ones(1,size(data_tla.(sesStr).(sprintf('%s_p2',dataTypes{d})).sub(sub).data.(parameter),1)));
        end
        
        cfg_ad = [];
        data_p1 = eval(sprintf('ft_appenddata(cfg_ad%s);',data_p1_append_str));
        data_p2 = eval(sprintf('ft_appenddata(cfg_ad%s);',data_p2_append_str));
        
        % find where p1 and p2 both exist for each trial
        p1_ind = [];
        p2_ind = [];
        if accurateClassifSelect
          imageCategory_test = []; % 1=face, 2=house
        end
        
        for p = 1:size(data_p1.trialinfo,1)
          p1_trlInd = p;
          p1_phaseCount = data_p1.trialinfo(p1_trlInd,phaseCountCol);
          p1_stimNum = data_p1.trialinfo(p1_trlInd,stimNumCol);
          p1_categNum = data_p1.trialinfo(p1_trlInd,categNumCol);
          
          p2_trlInd = find(...
            data_p2.trialinfo(:,phaseCountCol) == p1_phaseCount & ...
            data_p2.trialinfo(:,stimNumCol) == p1_stimNum & ...
            data_p2.trialinfo(:,categNumCol) == p1_categNum);
          
          if ~isempty(p2_trlInd)
            if length(p2_trlInd) == 1
              p1_ind = cat(2,p1_ind,p1_trlInd);
              p2_ind = cat(2,p2_ind,p2_trlInd);
              if accurateClassifSelect
                imageCategory_test = cat(2,imageCategory_test,p1_categNum);
              end
            else
              warning('more than one p2 trial found');
              keyboard
            end
          end
        end
        
        % put it in non-raw format (ft_appenddata makes it raw)
        cfg_t = [];
        cfg_t.keeptrials = 'yes';
        data_p1 = ft_timelockanalysis(cfg_t,data_p1);
        data_p2 = ft_timelockanalysis(cfg_t,data_p2);
        
        % select the requested events, times, channels, etc.
        cfg_sel.trials = p1_ind;
        data_p1 = ft_selectdata_new(cfg_sel,data_p1);
        cfg_sel.trials = p2_ind;
        data_p2 = ft_selectdata_new(cfg_sel,data_p2);
        
        %dat_p1 = data_p1.(parameter);
        %dat_p2 = data_p2.(parameter);
        
        dTypes_p1 = dTypes_p1(p1_ind);
        dTypes_p2 = dTypes_p2(p2_ind);
        
        if accurateClassifSelect
          cfg_t = [];
          cfg_t.keeptrials = 'yes';
          if isfield(cfg_sel,'trials')
            cfg_sel = rmfield(cfg_sel,'trials');
          end
          
          % attempt to classifiy study trials
          probabilityClassP1 = nan(length(p1_ind),2);
          correctClassP1 = true(size(p1_ind));
          if classifRequireP1
            for p = 1:length(p1_ind)
              dat1 = data_p1.(parameter)(p,:,:);
              dim = size(dat1);
              dat1 = reshape(dat1, dim(1), prod(dim(2:end)));
              
              Z = facehouse.test(zscore(dat1));
              probabilityClassP1(p,:) = Z;
              
              [Y,I] = max(Z,[],2);
              
              correctClassP1(p) = I == imageCategory_test(p);
            end
          end
          
          probabilityClassP2 = nan(length(p1_ind),2);
          correctClassP2 = true(size(p2_ind));
          if classifRequireP2
            for p = 1:length(p2_ind)
              dat2 = data_p2.(parameter)(p,:,:);
              dim = size(dat2);
              dat2 = reshape(dat2, dim(1), prod(dim(2:end)));
              
              Z = facehouse.test(zscore(dat2));
              probabilityClassP2(p,:) = Z;
              
              [Y,I] = max(Z,[],2);
              
              correctClassP2(p) = I == imageCategory_test(p);
            end
          end
          
          % only compare these trials
          p1_ind = find(correctClassP1 & correctClassP2);
          p2_ind = find(correctClassP1 & correctClassP2);
          
          cfg_sel.trials = p1_ind;
          data_p1 = ft_selectdata_new(cfg_sel,data_p1);
          cfg_sel.trials = p2_ind;
          data_p2 = ft_selectdata_new(cfg_sel,data_p2);
          
          dTypes_p1 = dTypes_p1(p1_ind);
          dTypes_p2 = dTypes_p2(p2_ind);
        end
        
        if ~isempty(p1_ind) && ~isempty(p2_ind)
          % unroll data for each trial in the second dimension
          dim1 = size(data_p1.(parameter));
          dim2 = size(data_p2.(parameter));
          dat_p1_p2 = cat(1,reshape(data_p1.(parameter), dim1(1), prod(dim1(2:end))),reshape(data_p2.(parameter), dim2(1), prod(dim2(2:end))));
          
          clear data_p1 data_p2
          
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%
          % Compute similarity
          %%%%%%%%%%%%%%%%%%%%%%%%%%%%
          
          % variables: columns = electrode x time (unrolled)
          % observations/instances: rows = events
          
          % apply PCA to data
          if exist('pca','file')
            [evec_p1_p2, data_pcaspace, eval_p1_p2] = pca(zscore(dat_p1_p2), 'Economy', true);
          else
            [evec_p1_p2, data_pcaspace, eval_p1_p2] = princomp(zscore(dat_p1_p2), 'econ');
          end
          
          if strcmp(eig_criterion,'kaiser')
            crit_eig = eval_p1_p2 >= 1;
          elseif strcmp(eig_criterion,'analytic')
            % analytic: keep PC if percent variance explained is above
            % 100 / number of variables
            
            % convert to percent variance explained
            eval_PVE = (eval_p1_p2 ./ sum(eval_p1_p2)) .* 100;
            crit_eig = eval_PVE > (100 / size(eval_PVE,1));
          elseif strcmp(eig_criterion,'CV85')
            % Cumulative variance 85%: keep PCs that explain at least 85%
            % of variance
            
            % convert to percent variance explained
            eval_PVE = (eval_p1_p2 ./ sum(eval_p1_p2)) .* 100;
            eval_CV = cumsum(eval_PVE);
            cutoff_eval = find(eval_CV>=85,1,'first');
            
            crit_eig = false(size(eval_p1_p2));
            crit_eig(1:cutoff_eval) = true;
          elseif strcmp(eig_criterion,'none')
            crit_eig = true(length(eval_p1_p2),1);
          end
          % remove features with eigenvalues that didn't pass criterion
          %
          % evec_p1_p2 (coeff) lets you map from PCA space to original
          % feature space
          evec_p1_p2_crit = evec_p1_p2(:, crit_eig);
          feature_vectors = data_pcaspace(:, crit_eig);
          
          %%%%%%
          % more feature selection done here? use dummy selection for now
          %%%%%%
          select_inds = true(1, size(feature_vectors, 2));
          
          evec_p1_p2_final = evec_p1_p2_crit(:, select_inds);
          feature_vectors = feature_vectors(:, select_inds);
          
          % normalize the vector lengths of each event
          feature_vectors = feature_vectors ./ repmat(sqrt(sum(feature_vectors.^2, 2)), 1, size(feature_vectors, 2));
          
          % compute the similarities between each pair of events
          similarities = 1 - squareform(pdist(feature_vectors, sim_method));
          
          % zscore the similarity values across all trials for this subject
          similarities = zscore(similarities);
          
          %             feature_vectors = data_pcaspace(:, crit_eig);
          %
          %             %%%%%%
          %             % more feature selection done here? use dummy selection for now
          %             %%%%%%
          %             select_inds = true(1, size(feature_vectors, 2));
          %
          %             evec_p1_p2_final = evec_p1_p2_crit(:, select_inds);
          %             feature_vectors = feature_vectors(:, select_inds);
          %
          %             feature_vectors = zscore(feature_vectors,0,2);
          %
          %             % normalize the vector lengths of each event
          %             feature_vectors = feature_vectors ./ repmat(sqrt(sum(feature_vectors.^2, 2)), 1, size(feature_vectors, 2));
          %
          %             % compute the similarities between each pair of events
          %             similarities_zpre = 1 - squareform(pdist(feature_vectors, 'cosine'));
          %
          %
          %             feature_vectors = data_pcaspace(:, crit_eig);
          %
          %             %%%%%%
          %             % more feature selection done here? use dummy selection for now
          %             %%%%%%
          %             select_inds = true(1, size(feature_vectors, 2));
          %
          %             evec_p1_p2_final = evec_p1_p2_crit(:, select_inds);
          %             feature_vectors = feature_vectors(:, select_inds);
          %
          %
          %             % normalize the vector lengths of each event
          %             feature_vectors = feature_vectors ./ repmat(sqrt(sum(feature_vectors.^2, 2)), 1, size(feature_vectors, 2));
          %
          %             feature_vectors = zscore(feature_vectors,0,2);
          %             % compute the similarities between each pair of events
          %             similarities_zpost = 1 - squareform(pdist(feature_vectors, 'cosine'));
          
          % add it to the full set
          for d = 1:length(dataTypes)
            similarity_all{sub,ses,d,lat} = similarities(cat(2,dTypes_p1,dTypes_p2) == d,cat(2,dTypes_p1,dTypes_p2) == d);
            similarity_ntrials(sub,ses,d,lat) = sum(cat(2,dTypes_p1,dTypes_p2) == d);
            %similarity_all{sub,ses,d,lat} = similarities;
            %similarity_ntrials(sub,ses,d,lat) = length(p1_ind);
          end
          
        end % ~isempty
      end % lat
    end % ~badSub
    
    saveFile = fullfile(dirs.saveDirProc,exper.subjects{sub},exper.sesStr{ses},sprintf('RSA_PCA_tla_%s_%s_%s_%s_%s_%dlat_%sAvgT_%s_%s.mat',data_str,sim_method,classif_str,eig_criterion,roi_str,size(latencies,1),cfg_sel.avgovertime,lpfilt_str,date_string));
    fprintf('Saving: %s\n',saveFile);
    save(saveFile,'exper','dataTypes','thisROI','cfg_sel','eig_criterion','sim_method','classif_str','lpfilt','latencies','similarity_all','similarity_ntrials');
    fprintf('Done.\n');
  end % ses
end % sub
